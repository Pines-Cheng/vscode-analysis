(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{217:function(s,t,a){s.exports=a.p+"assets/img/vscode-dir.0aa64091.png"},218:function(s,t,a){s.exports=a.p+"assets/img/src-dir.7c925b22.png"},237:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"vscode源码结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vscode源码结构"}},[s._v("#")]),s._v(" VSCode源码结构")]),s._v(" "),n("p",[s._v("整体文件目录结构如下所示:")]),s._v(" "),n("p",[n("img",{attrs:{src:a(217),alt:"vscode-dir"}})]),s._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("├── build         # gulp编译构建脚本\n├── extensions    # 内置插件\n├── gulpfile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js   # gulp task\n├── out           # 编译输出目录\n├── resources     # 平台相关静态资源，图标等\n├── scripts       # 工具脚本，开发"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("测试\n├── src           # 源码目录\n├── test          # 测试套件\n└── product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json  # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("App")]),s._v(" meta信息\n")])])]),n("p",[s._v("src下文件目录结构，如下图:")]),s._v(" "),n("p",[n("img",{attrs:{src:a(218),alt:"src-dir"}})]),s._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("├── bootstrap"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("amd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js    # 子进程实际入口\n├── bootstrap"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fork"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js   #\n├── bootstrap"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js #\n├── bootstrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js        # 子进程环境初始化\n├── buildfile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js        # 构建config\n├── cli"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js              # CLI入口\n├── main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js             # 主进程入口\n├── paths"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js            # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AppDataPath")]),s._v("与"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DefaultUserDataPath")]),s._v("\n├── typings\n│   └── xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts        # ts类型声明\n└── vs\n    ├── base            # 定义基础的工具方法和基础的 DOM UI 控件\n    │   ├── browser     # 基础UI组件，DOM操作、交互事件、"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DnD")]),s._v("等\n    │   ├── common      # diff描述，markdown解析器，worker协议，各种工具函数\n    │   ├── node        # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v("工具函数\n    │   ├── parts       # IPC协议（"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v("），quickopen、tree组件\n    │   ├── test        # base单测用例\n    │   └── worker      # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Worker")]),s._v(" factory 和 main "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Worker")]),s._v("（运行IDE "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Core")]),s._v("："),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Monaco")]),s._v("）\n    ├── code            # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VSCode")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v(" 应用的入口，包括 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v(" 的主进程脚本入口\n    │   ├── electron"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("browser # 需要 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v(" 渲染器处理API的源代码（可以使用 common"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" browser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" node）\n    │   ├── electron"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("main    # 需要"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v("主进程API的源代码（可以使用 common"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" node）\n    │   ├── node        # 需要"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Electron")]),s._v("主进程API的源代码（可以使用 common"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" node）\n    │   ├── test\n    │   └── code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts\n    ├── editor          # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Monaco")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Editor")]),s._v(" 代码编辑器：其中包含单独打包发布的 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Monaco")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Editor")]),s._v(" 和只能在 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VSCode")]),s._v(" 的使用的部分\n    │   ├── browser     # 代码编辑器核心\n    │   ├── common      # 代码编辑器核心\n    │   ├── contrib     # vscode 与独立 IDE共享的代码\n    │   ├── standalone  # 独立 IDE 独有的代码\n    │   ├── test\n    │   ├── editor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts\n    │   ├── editor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts\n    │   ├── editor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts\n    │   └── editor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("worker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ts\n    ├── platform        # 依赖注入的实现和 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VSCode")]),s._v(" 使用的基础服务 "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Services")]),s._v("\n    ├── workbench       # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VSCode")]),s._v(" 桌面应用程序工作台的实现\n    ├── buildunit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json\n    ├── css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("build"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js    # 用于插件构建的CSS loader\n    ├── css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js          # CSS loader\n    ├── loader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js       # AMD loader（用于异步加载AMD模块，类似于require"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js）\n    ├── nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("build"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js    # 用于插件构建的 NLS loader\n    └── nls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js          # NLS（"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("National")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Language")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Support")]),s._v("）多语言loader\n")])])]),n("p",[s._v("首先 VSCode 整体由其核心core和内置的扩展Extensions组成，core是实现了基本的代码编辑器和 VSCode 桌面应用程序，即 VSCode workbench，同时提供扩展 API，允许内置的扩展和第三方开发的扩展程序来扩展 VSCode Core 的能力。")]),s._v(" "),n("p",[s._v("其次，由于 VSCode 依赖 Electron，而 Electron 存在着主进程和渲染进程，它们能使用的 API 有所不到，所以 VSCode Core 中每个目录的组织也按照它们能使用的 API 来组织安排。在 Core 下的每个子目录下，按照代码所运行的目标环境分为以下几类：")]),s._v(" "),n("ul",[n("li",[s._v("common: 只使用 JavaScript API 的源代码，可能运行在任何环境")]),s._v(" "),n("li",[s._v("browser: 需要使用浏览器提供的 API 的源代码，如 DOM 操作等")]),s._v(" "),n("li",[s._v("node: 需要使用Node.js提供的 API 的源代码")]),s._v(" "),n("li",[s._v("electron-browser: 需要使用 Electron 渲染进程 API 的源代码")]),s._v(" "),n("li",[s._v("electron-main: 需要使用 Electron 主进程 API 的源代码")])]),s._v(" "),n("p",[s._v("按照上述规则，即src/vs/workbench/browser中的源代码只能使用基本的 JavaScript API 和浏览器提供的 API，而src/vs/workbench/electron-browser中的源代码则可以使用 JavaScript API，浏览器提供的 API、Node.js提供的 API、和 Electron 渲染进程中的 API。")]),s._v(" "),n("p",[s._v("在 VSCode 代码仓库中，出了上述的src/vs的Core之外，还有一大块即 VSCode 内置的扩展，它们源代码位于extensions内。")]),s._v(" "),n("p",[s._v("VSCode 作为代码编辑器，与各种代码编辑的功能如语法高亮、补全提示、验证等都有扩展实现的。所以在 VSCode 的内置扩展内，一大部分都是各种编程语言的支持扩展，如：extensions\\html、extensions\\javascript、extensions\\cpp等等，大部分语言扩展中都会出现如.tmTheme、.tmLanguage等 TextMate 的语法定义。还有一类内置的扩展是 VSCode 主体扩展，如 VSCode 默认主体extensions/theme-defaults等。")])])}),[],!1,null,null,null);t.default=e.exports}}]);